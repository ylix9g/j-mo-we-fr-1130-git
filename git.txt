Git - отдельная программа выполняющая функции системы контроля версий, важно
отметить взаимодействие с программой Git производиться исключительно путём
выполнения команда в терминала (командной строке). Система контроля версий Git
позволяет работать с историей изменений отслеживаемой относительно репозитория
(репозиторием называется папка относительно которой отслеживаются изменения и
хранится их история), история изменений может состоять из множества записанных
в неё точек сохранений (commit-ы). Помимо хранения истории изменений Git
предоставляет инструменты позволяющие удобно реализовать командную разработку
(единовременную работу над проектом нескольких разработчиков), таким
инструментом являются ветки, ветка представляет собой отдельно взятое рабочее
пространство существующее в контексте репозитория со своей историей изменения
которая пересекается с остальными лишь от части (каждая ветка является
изолированным рабочим пространством для отдельно взятого разработчика). При
работе с ветками со временем встаёт вопрос их объединения в одну цельную ветку,
Git предоставляет для такой операции инструмент под названием слияние.
Перечисленные возможности это только часть того что умеет Git.

`git --version` - выводит версию установленной программы Git если она есть.

`git init` - инициализирует новый репозиторий в папке на которой сфокусирован
терминал в момент выполнения команды.

`git status` - выводит информацию об актуальном состоянии репозитория на момент
выполнения команду, к выводимой информации относится название текущей ветки,
состояние файлов репозитория и так далее.

`git add <files>` - добавляет файл для его дальнейшей записи в ближайшую точку
сохранения (commit), при формировании точки сохранения добавленный файл будет
записан в историю в том виде в котором он был на момент выполнения команды git
add (изменения внесённые в файл после выполнения данном команды не будут
записаны в историю).

`git config user.name/git config user.email` - команды позволяющие записать в
конфигурацию репозитория имя и email автора который будет вносить изменения.

`git commit -m <message>` - записывает в историю изменений новую точку
сохранения с файлами добавленными ранее через git add и небольшим пояснительным
сообщением.








